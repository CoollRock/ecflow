
For Explicit template instantiation
===================================

 o remove definition in the header file , just leave declaration
 o Will need to include header files for boost::archive::text_iarchive/ boost::archive::text_oarchive
 o Place definition in cpp file, and explicit template declaration to force instantiation
 

Class Dstate, example
---------------------

   template<class Archive>
   void DState::serialize(Archive & ar, const unsigned int /*version*/)
   {
       ar & state_;
   }
   
   # Could be replaced with a #define
   #if defined(TEXT_ARCHIVE) || !defined(BINARY_ARCHIVE) && !defined(PORTABLE_BINARY_ARCHIVE) && !defined(EOS_PORTABLE_BINARY_ARCHIVE)
   template void DState::serialize<boost::archive::text_iarchive>(boost::archive::text_iarchive & ar,const unsigned int file_version);
   template void DState::serialize<boost::archive::text_oarchive>(boost::archive::text_oarchive & ar,const unsigned int file_version);
   #endif
   
   #if defined(BINARY_ARCHIVE)
   template void DState::serialize<boost::archive::binary_iarchive>(boost::archive::binary_iarchive & ar,const unsigned int file_version);
   template void DState::serialize<boost::archive::binary_oarchive>(boost::archive::binary_oarchive & ar,const unsigned int file_version);
   #endif   
   
   #if defined(PORTABLE_BINARY_ARCHIVE)
   template void DState::serialize<boost::archive::portable_binary_iarchive>(boost::archive::portable_binary_iarchive & ar,const unsigned int file_version);
   template void DState::serialize<boost::archive::portable_binary_oarchive>(boost::archive::portable_binary_oarchive & ar,const unsigned int file_version);
   #endif

   #if defined(EOS_PORTABLE_BINARY_ARCHIVE)
   template void DState::serialize<boost::archive::portable_iarchive>(boost::archive::portable_iarchive & ar,const unsigned int file_version);
   template void DState::serialize<boost::archive::portable_iarchive>(boost::archive::portable_iarchive & ar,const unsigned int file_version);
   #endif
   
Benefits
--------
 o reduced build/compile times, of ecflow, and clients like ecflowview
 o better hiding of serialisation implementation  
   
Todo
--------
  o Huge list of classes, that will take quite a while, 
  o Need explicit template instantiation for , BINARY and PORTABLE_BINARY and EOS_PORTABLE_BINARY
    Need a #define to avoid copy/paste errors for the different types
  o test this works on all platforms , with provided compilers
  