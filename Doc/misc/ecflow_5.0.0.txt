
The development of ecflow started in April 2009 as a replacement for SMS.

During this time it has been continually developed to meet the needs of production, research and development sections.


The 4 series has been in use by member and co-operating states since 2013.

ecFlow 5 series is the next iteration. It is intended for use in the new Bologna data centre.

Older packages like SMS and ecflow 4.X.X will no longer be supported after the move to Bologna.

It should be noted that:

    - New features in version 5 will need to be validated by Production section.
      To minimize the maintenance burden, unused features may be removed.
      It provides python 2.7 and Python3 api, to ease the testing process.
    - There is no change in the python API, other than addition of new features
    - The 4.X.X gui is not interoperable with version 5 and vice versa.
    - Request for new features or change of functionality should be done as soon as possible, 
      as we have a very tight schedule.

Why do we need version 5 ?

    - ecflow 4.X.X series relied on boost serialisation for client server communication,
      which meant sticking with a single version of boost, to maintain compatibility between versions.
      The ability to extend existing classes over the client/server divide was very limited
    - Ecflow 5 has dropped the dependency for boost in the client/server comms, and now uses JSON.
      This means that future version of ecflow 5 can use different boost libs.
    - The latency during the client/server communication has been improved.
    - There was a requirement to use the older compilers to support RPM creation, this has been dropped.
      We now use the newer c++ compilers and features, resulting in improved performance.
 
More details about the new features can be found here: https://confluence.ecmwf.int/pages/viewpage.action?pageId=131374752

This release is accessible using the module system:

   module avail ecflow
   module unload ecflow 
   module load ecflow/5.0.0-develop 

on the following platforms:

   o linux 11.3          (lxop-dev)
   o redhat/RHEL 6.4     (ecgb,sappb,sappa)
   o leap42              (leap42)
   o linux cluster       (lxg/lxc)
   o virtual machines    (vsms1 -> operational and research VM are linked to this)
   o cca/ccb/cct/cck     (cray) 
   




Reason to move to ecflow 5.0.0
====================================
o Built with python3 ( currently we build both python2 and python3)
  - big implication for existing 2.7 code base

o Allows family to be limited as well as tasks

o Now support auto sync, this reduces the latency for GUI and python clients.
  Auto sync allows us to make a change to the server defs, and automatically sync those changes
  with the client definition. Previously these were two separate commands send to the server.
  This should reduce latency and improve responsives

o Functionality for archive and restore.( and auto migrate). 
  This will write potion of the definition to disk and restore on requeue
  This will help in coping with extra large suites

o much better identification of zombies
  - i.e password missmatch, pid miss match, 
    if user created zombies we record user command that 
    gave rise to the zombie
  
o security: password protection
o security: User commands will now log hostname as 
            well as the user that issued the command

o Improved why command, when using time attributes.

o New query command, allows us to query event,meter and trigger status.

o Old GUI(ecfowview) will be retired

o New Queue attribute
   
o new date attribute
  This is still under developement

o Replace boost serialsiation used client/server communication with json.
 
* We will be producing a development version of ecflow 5.0.0
  It should *NOT* be used for any operational task, as it subject to change
  and can not gurantee compatibliy with future release, until released.
  
o In ecflow 4.70 the checkpoint is now saved, in the defs format.
  hence migrating to the new server should be trivial.

o Uses the latest boost version boost 1.68

o Built with c++14
  - issue for rpm, force update to gcc 6.3 minimum version
  

Challenges
=====================================================================
  
o However the client/server protocol has changed, 
  and hence we can *NOT* use 4.x.x ecflow_ui, to 
  view 5.x.x server, and vice versa.
  By replacing boost with json, it should allow greater 
  compatibility in the future.
  
  https://snowplowanalytics.com/blog/2014/05/15/introducing-self-describing-jsons/
  