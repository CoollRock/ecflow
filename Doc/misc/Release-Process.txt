Process
==================================================================

0/ **** Check we are not in a high risk period ???

0/ **** DO ***NOT*** switch current link ****************
   **** User support will do this, during an arranged system session
   **** This is because we have member states, using it for their operations.
   
   **** If we have any scripts in production that are using 
   ****    /usr/local/apps/ecflow/current
   **** These make break.
   **** This is **very** important      
   **** IDEALLY we need to educate member states *NOT* to use 
   ****     /usr/local/apps/ecflow/current  

----------------------------------------------------------------------
0/ *make sure ecbuild in cmake.sh matches the metabuilder*

0/ Create the tarball using cmake, in the build directory with  
   
   cd $WK                       # ecflow root directry
   rm -rf ../bdir               # *REMOVE* build tree
   git pull                     # make sure we use the latest
   ./cmake.sh package_source    # this will place ecflow tar file in your $SCRATCH

0/ Inform user support, allows user support to build/test rpm
   *Before* each release, make sure the ecflow tar file is
   copied to $SCRATCH(done by the previous step) and inform Daniel. 
   This will allow him to make rpm packages, build on other linux flavours.

   This is important, so that release, used internally is in
   sync with release given to users. 
   
   - ** Check the size of tar file **, ensure that have not included redundant files.
   <Inform Daniel>
   
0/ Build release: Two approaches, both use meta-builder: 
    1/ git flow release start  4.12.0 
       git_tag=release/4.12.0
       Use this approach when multiple people working on the release.
      *Push* branch onto stash, otherwise we can not pull, from the remote machines
       - In eclipse, you *may* have to push this branch first Team->Push Branch
        *otherwise* the option Team->Push Upstream  may well be greyed out.
       
    2/ git flow release start  4.12.0
       git flow release finish 4.12.0  
       push
       git_tag=4.12.0
       When single person making release
 
0/ Update ECFLOW_GIT_BRANCH to "4.12.0" in meta-builder(settings/ecflow/ecflow.py# git_tag=release/4.12.0)
   Then use the meta builder to build/install.
   Note: if used 
     > git flow release start 4.12.0        # -> it will create a branch release/4.12.0
     > Either set package_version="4.12.0"
     > Either set package_version=""        # extract version from VERSION.cmake

0/ For a PREPIFS release change file:
     /usr/local/apps/ecflow/.modulerc
   This file defines the mapping to symbol, i.e like default,new,old, prepifs
   
0/ Update Documentation
   
  - https://software.ecmwf.int/wiki/display/ECFLOW/Change+History

  - Need automated way:
    - Just need to update python API.
    - cd $WK/Doc/online; make clean; make html
    
    Sometimes this crashes, Just re-build Pyext, and try again.
       rm -rf Pyext/bin
       bjam -j8
 
0/ Update WIKI:
   This announces the changes in the release
   https://software.ecmwf.int/wiki/display/ECFLOW/Latest+news

   In both cases add a tag/label for "news". This make the newly added page
   appear in the top half of the latest news

0/ Update release:
   ** Go to "Tools->Attachments", then load the gzip file(i.e from $SCRATCH): 
      Go to the bottom of the page *****
   0 release: This uploads the release zip file: making it accessible to member states
   http://software.ecmwf.int/wiki/display/ECFLOW/Releases
   
   0 Beta releases :
   https://software.ecmwf.int/wiki/display/ECFLOW/Pre-Releases
   
   Add a page with the title of the release. 
   In both cases add a tag/label for "news". This make the newly added page
   appear in the top half of the latest news
   
0/ Announce release
   mail group:  ecflow_int@lists.ecmwf.int 
   Use: ecflow/Doc/misc/Release-Anouncement.txt
  
0/ AFTER the release 
   o increment the version number in $WK/VERSION.cmake THEN, run:
     sh -x $WK/cmake.sh debug
     
     This will update the version number for $WK/ACore/src/ecflow_version.h
     This file is included in $WK/ACore/src/Version.cpp
     It will also update ecflow/Pyext/__init__.py
     
     Then check this file in, for the other platforms.
     
0/ Reset metabuilder and ecflow git_tag, back to develop

0/ record the performance statistics for the release. ( see Doc/misc/test_times )

0/ ** Check the security level of Jira issues for the release.
      If there is nothing sensitive, then set security level to None
