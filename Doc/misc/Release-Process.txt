Process
==================================================================

0/ **** Check we are not in a high risk period ???

0/ **** DO ***NOT*** switch current link ****************
   **** User support will do this, during an arranged system session
   **** This is because we have member states, using it for their operations.
   
   **** If we have any scripts in production that are using 
   ****    /usr/local/apps/ecflow/current
   **** These make break.
   **** This is **very** important      
   **** IDEALLY we need to educate member states *NOT* to use 
   ****     /usr/local/apps/ecflow/current  

----------------------------------------------------------------------

0/ Create the tarball using cmake, in the build directory with  
   This can be done using:
   
   $WK/cmake.sh package_source

0/ Inform user support, allows user support to test rpm
   
0/ *Before* each release, make sure the ecflow tar file is
   copied to $SCRATCH and inform Daniel. This will allow
   him to make rpm packages, build on other linux flavours.

   This is important, so that release, used internally is in
   sync with release given to users. 
   
   - ** Check the size of tar file **, ensure that have not included redundant files.
   <Inform Daniel>
   
0/ Two approaches, both use meta-builder: 
    1/ git flow release start  4.5.0 
       git_tag=release/4.5.0
       Use this approach when multiple people working on the release.
      *Push* branch onto stash, otherwise we can not pull, from the remote machines
       - In eclipse, you *may* have to push this branch first Team->Push Branch
        *otherwise* the option Team->Push Upstream  may well be greyed out.
       
    2/ git flow release start  4.5.0
       git flow release finish 4.5.0  
       push
       git_tag=4.5.0
       When single person making release
 
0/ Update ECFLOW_GIT_BRANCH to "4.5.0" in meta-builder(settings/ecflow/ecflow.py# git_tag=release/4.5.0)
   Then use the meta builder to build/install.
   Note: if used 
     > git flow release start 4.5.0        # -> it will create a branch release/4.5.0
     > Either set package_version="4.5.0"
     > Either set package_version=""        # extract version from VERSION.cmake

0/ For a PREPIFS release change file:
     /usr/local/apps/ecflow/.modulerc
   This file defines the mapping to symbol, i.e like default,new,old, prepifs
   
0/ Update Documentation
   
  - https://software.ecmwf.int/wiki/display/ECFLOW/Change+History

  - Need automated way:
    - Just need to update python API.
    - cd $WK/Doc/online; make clean; make html
    
    Sometimes this crashes, Just re-build Pyext, and try again.
       rm -rf Pyext/bin
       bjam -j8
    
0/ REDHAT: If we built on ecgb/redhat we can copy release to sappa/sappab 
  
         scp -r 4.5.0 deploy@sappa:/usr/local/apps/ecflow/.
         scp -r 4.5.0 deploy@sappb:/usr/local/apps/ecflow/.
         
         or try with emos  and password.
         scp -r 4.5.0 emos@sappb:/usr/local/apps/ecflow/.
         
   VIRTUAL Machines: These should treated like regular machines. 
         - These are based on lxop_dev, hence we need top copy over exe for this
         - For a list of machines see view/server.od( vsms1,vmsm2,vsms3,vali)
         - to show kernel version: uname -a
         - to show os version:     lsb_release -a
         
         - ssh lxop_dev, su emos;
         - scp -r 4.5.0 emos@<virtual machine>:/usr/local/apps/ecflow/.
         
         
  *Make* sure destination has a trailing '/.' otherwise you
  can end up renaming.

0/ The RD virtual machines are tied to vsms1, via a link to /usr/local
 
   	  ssh rdx@<hostname>
   
      i.e  ssh rdx@vecfrdda1
      
      df 
         this will show the links
      
   The list of all virtual machines, versions and port numbers is in:
   
        ~rdx/ecflow/servers.config
        
   # as an emergency we can copy from lxop_dev
   - ssh lxop_dev, su emos;
   - scp -r 4.5.0 emos@vecfrdda1:/usr/local/apps/ecflow/.
        

0/ Update WIKI:
   This announces the changes in the release
   https://software.ecmwf.int/wiki/display/ECFLOW/Latest+news

   In both cases add a tag/label for "news". This make the newly added page
   appear in the top half of the latest news

0/ Update release:
   ** Go to "Tools->Attachments", then load the gzip file:  Go to the bottom of the page *****
   0 release: This uploads the release zip file: making it accessible to member states
   http://software.ecmwf.int/wiki/display/ECFLOW/Releases
   
   0 Beta releases :
   https://software.ecmwf.int/wiki/display/ECFLOW/Pre-Releases
   
   Add a page with the title of the release. 
   In both cases add a tag/label for "news". This make the newly added page
   appear in the top half of the latest news
   
0/ Announce release
   mail group:  ecflow_int@lists.ecmwf.int 
   Use: Release-Anouncement.txt
  
0/ Tag the release, This should now be automatic when using git flow:
       git flow release finish 4.5.0
  
0/ AFTER the release 
   o increment the version number in $WK/VERSION.cmake THEN, run:
     sh -x $WK/cmake.sh debug
     
     This will update the version number for $WK/ACore/src/ecflow_version.h
     This file is included in $WK/ACore/src/Version.cpp
     
     Then check this file in for, for the other platforms.
     
0/ Reset metabuilder ecflow git_tag, back to develop
