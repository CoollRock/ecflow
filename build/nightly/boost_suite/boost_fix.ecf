%include <head.h>

#===============================================================
# defines variable WK
#===============================================================
%include <export_WK.h>
#cd $WK
   
if [[ %SET_TO_TEST_SCRIPT% = true ]] ; then
   echo "Test only"
else       
   # ==========================================================
   # use [[ ]] for string comparison
   # ==========================================================
   echo "BOOST_ROOT=$BOOST_ROOT"
   
   if [[ %BOOST_VERSION% = boost_1_47_0 ]] ; then
   
      if [[ %ARCH% = hpux ]] ; then
         # Hack for utf8_codecvt_facet due to compiler build error on ACC
         cp $WK/build/hpux_fix/utf8_codecvt_facet.cpp  $BOOST_ROOT/libs/detail/.
      fi
      
      if [[ %ARCH% = ibm_power6 || %ARCH% = ibm_power7 ]] ; then
         # Fix bug where release version crashes due to bug in Serialization/compiler
         # See file $WK/build/aix_fix/README
         cp $WK/build/aix_fix/singleton.hpp $BOOST_ROOT/boost/serialization/.
         cp $WK/build/aix_fix/force_include.hpp $BOOST_ROOT/boost/serialization/.
      fi
   fi

   if [[ %BOOST_VERSION% = boost_1_48_0 ]] ; then
   
      if [[ %ARCH% = hpux ]] ; then
         # Hack for utf8_codecvt_facet due to compiler build error on ACC
         cp $WK/build/hpux_fix/utf8_codecvt_facet.cpp  $BOOST_ROOT/libs/detail/.
         
         # Hack because boost::int8_t was being interpreted as a char,
         # This cause duplicate class definition during template instantiation.
         # in the file ./boost/numeric/conversion/detail/preprocessed/numeric_cast_traits.hpp
         # See:: https://svn.boost.org/trac/boost/attachment/ticket/6158/cstdint_patch.diff
         cp $WK/build/hpux_fix/cstdint.hpp  $BOOST_ROOT/boost/.
      fi
      
      if [[ %ARCH% = ibm_power6 || %ARCH% = ibm_power7 ]] ; then
         # Fix bug where release version crashes due to bug in Serialization/compiler
         # See file $WK/build/aix_fix/README
         cp $WK/build/aix_fix/singleton.hpp $BOOST_ROOT/boost/serialization/.
         cp $WK/build/aix_fix/force_include.hpp $BOOST_ROOT/boost/serialization/.
      fi
   fi
   
   if [[ %BOOST_VERSION% = boost_1_51_0 ]] ; then
   
      if [[ %ARCH% = hpux ]] ; then
         # Hack for utf8_codecvt_facet due to compiler build error on ACC
         cp $WK/build/hpux_fix/boost_1_51_0/utf8_codecvt_facet.ipp  $BOOST_ROOT/boost/detail/.
      fi
   fi
   
   if [[ %BOOST_VERSION% = boost_1_53_0 ]] ; then
   
     if [[ %ARCH% = hpux ]] ; then
      
         # Hack for utf8_codecvt_facet due to compiler build error on ACC
         cp $WK/build/hpux_fix/boost_1_53_0/utf8_codecvt_facet.ipp  $BOOST_ROOT/boost/detail/.

         # Seems to only affect debug build of ecflow(serialisation) on HP-UX
         # Hack because:
         #   more than one instance of overloaded function "throw_exception" matches the argument list
         #
         cp $WK/build/hpux_fix/boost_1_53_0/smart_cast.hpp  $BOOST_ROOT/boost/serialization/.
     fi
      
     if [[ %ARCH% = ibm_power6 || %ARCH% = ibm_power7 ]] ; then
         # Fix bug with thread.cpp    
         # See file $WK/build/aix_fix/boost_1_53_0/README 
         cp $WK/build/aix_fix/boost_1_53_0/thread.cpp  $BOOST_ROOT/libs/thread/src/pthread/ 
      fi
   fi
   
   if [[ %BOOST_VERSION% = boost_1_55_0 ]] ; then
   
      if [[ %ARCH% = hpux ]] ; then
      
         # Hack for utf8_codecvt_facet due to compiler build error on ACC
         cp $WK/build/hpux_fix/boost_1_53_0/utf8_codecvt_facet.ipp  $BOOST_ROOT/boost/detail/.

         # Seems to only affect debug build of ecflow(serialisation) on HP-UX
         # Hack because:
         #   more than one instance of overloaded function "throw_exception" matches the argument list
         #
         cp $WK/build/hpux_fix/boost_1_53_0/smart_cast.hpp  $BOOST_ROOT/boost/serialization/.
      fi
      
      if [[ %ARCH% = cray ]] ; then
      
         cp $WK/build/cray_fix/boost_1_55_0/smalldiff $BOOST_ROOT/.
         cd $BOOST_ROOT
         patch -p0 < smalldiff
         
         cp $WK/build/cray_fix/boost_1_55_0/cray.hpp  $BOOST_ROOT/boost/config/compiler/.
      fi
   fi
   
   # From boost 1.56 ownwards we use a different approach
   # We will fix up the tar file, once, then re-use
   # 
   #if [[ %BOOST_VERSION% = boost_1_56_0 ]] ; then
   #
   #   # Crickey! boost shared_ptr_helper forgot two extra includes, for all platforms !
   #   cp $WK/build/fix/boost_1_56_0/shared_ptr_helper.hpp  $BOOST_ROOT/boost/serialization/.
   #fi
fi

%include <tail.h>
