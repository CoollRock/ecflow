%include <head.h>

# ==========================================================
# Run as REMOTE_HOST.  
# ==========================================================
 
if [[ %SET_TO_TEST_SCRIPT% = true ]] ; then
   echo "Test only"
else

   if [[ %ARCH% = linux64intel ]] ; then
      # provide access to intel c++ compiler on lxab
      export PATH=/usr/local/apps/intel/composer_xe_2013.3.163/bin:$PATH
      sh -x iccvars.sh intel64
   fi
   
   CXXFLAGS=
   if [[ %ARCH% = cray ]] ; then
      CXXFLAGS=cxxflags=-fPIC
      # on CRAY gnu has layout tagged, and intel and cray have layout versioned
   fi

   # ========================================================================
   # Build the boost libs used by ecflow
   # ========================================================================
   
   cd $BOOST_ROOT
   
   # uncomment for clean build
   #rm -rf stage
   #rm -rf tmpBuildDir
   #rm -rf bin.v2
   
   # ========================================================================
   # Note: boost thread *ONLY* needed to *test* multi-threaded server
   # ========================================================================
   
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-system variant=debug 
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-date_time variant=debug 
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-filesystem variant=debug   
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-program_options variant=debug 
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-serialization  variant=debug 
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-thread variant=debug  
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-test variant=debug  
   
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-system variant=release 
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-date_time variant=release  
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-filesystem variant=release   
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-program_options variant=release 
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-serialization  variant=release 
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-thread variant=release  
   ./bjam --build-dir=./tmpBuildDir toolset=%TOOLSET% $CXXFLAGS stage link=static --layout=%LAYOUT% --with-test variant=release  
   
   # Build boost python in the same, as building $WK/Pyext
   ./bjam toolset=%TOOLSET% link=shared variant=debug   $CXXFLAGS stage --layout=%LAYOUT% threading=single --with-python
   ./bjam toolset=%TOOLSET% link=shared variant=release $CXXFLAGS stage --layout=%LAYOUT% threading=single --with-python
   ./bjam toolset=%TOOLSET% link=shared variant=debug   $CXXFLAGS stage --layout=%LAYOUT% threading=multi --with-python
   ./bjam toolset=%TOOLSET% link=shared variant=release $CXXFLAGS stage --layout=%LAYOUT% threading=multi --with-python
 
fi

%include <tail.h>
