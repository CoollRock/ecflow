/*
** Generated by X-Designer
*/
/*
**LIBS: -lXm -lXt -lX11
*/

#include <stdlib.h>
#include <X11/Xatom.h>
#include <X11/Intrinsic.h>
#include <X11/Shell.h>

#include <Xm/Xm.h>
#include <Xm/DialogS.h>
#include <Xm/MessageB.h>
#include <Xm/LabelG.h>
#include <Xm/PushBG.h>
#include <Xm/SeparatoG.h>


#include "uierror.h"

error_shell_p error_shell = (error_shell_p) NULL;



void error_shell_c::create (Widget parent, char *widget_name)
{
  /* Widget children[6];      // Children to manage */
	Arg al[64];                    /* Arg List */
	register int ac = 0;           /* Arg Count */
	Widget button28 = (Widget)NULL;
	Widget button30 = (Widget)NULL;

	if ( !widget_name )
		widget_name = "error_shell";

	XtSetArg(al[ac], XmNallowShellResize, TRUE); ac++;
	XtSetArg(al[ac], XmNtransient, TRUE); ac++;
	error_shell = XmCreateDialogShell ( parent, widget_name, al, ac );
	ac = 0;
	_xd_rootwidget = error_shell;
	XtSetArg(al[ac], XmNdialogType, XmDIALOG_ERROR); ac++;
	form_ = XmCreateMessageBox ( error_shell, "form_", al, ac );
	ac = 0;
	button28 = XmMessageBoxGetChild ( form_, XmDIALOG_CANCEL_BUTTON );
	label_ = XmMessageBoxGetChild ( form_, XmDIALOG_MESSAGE_LABEL );
	button30 = XmMessageBoxGetChild ( form_, XmDIALOG_OK_BUTTON );
	XtAddCallback (form_, XmNokCallback,&error_shell_c:: okCB, (XtPointer) this);
	XtAddCallback (form_, XmNcancelCallback,&error_shell_c:: cancelCB, (XtPointer) this);
	XtAddCallback (form_, XmNhelpCallback,&error_shell_c:: helpCB, (XtPointer) this);
	XtUnmanageChild ( button28 );
	XtUnmanageChild ( button30 );
}

void error_shell_c::helpCB( Widget widget, XtPointer client_data, XtPointer call_data )
{
	error_shell_p instance = (error_shell_p) client_data;
	instance->helpCB ( widget, call_data );
}

void error_shell_c::cancelCB( Widget widget, XtPointer client_data, XtPointer call_data )
{
	error_shell_p instance = (error_shell_p) client_data;
	instance->cancelCB ( widget, call_data );
}

void error_shell_c::okCB( Widget widget, XtPointer client_data, XtPointer call_data )
{
	error_shell_p instance = (error_shell_p) client_data;
	instance->okCB ( widget, call_data );
}

