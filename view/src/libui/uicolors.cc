/*
** Generated by X-Designer
*/
/*
**LIBS: -lXm -lXt -lX11
*/

#include <stdlib.h>
#include <X11/Xatom.h>
#include <X11/Intrinsic.h>
#include <X11/Shell.h>

#include <Xm/Xm.h>
#include <Xm/DialogS.h>
#include <Xm/Form.h>
#include <Xm/Frame.h>
#include <Xm/Label.h>
#include <Xm/RowColumn.h>
#include <Xm/Separator.h>
#include <Xm/TextF.h>
#include <Xm/LabelG.h>
#include <Xm/ToggleBG.h>


#include "uicolors.h"

colors_form_p colors_form = (colors_form_p) NULL;



void colors_form_c::create (Widget parent, char *widget_name)
{
  Widget children[12];      /* Children to manage */
  Arg al[64];                    /* Arg List */
  register int ac = 0;           /* Arg Count */
  Widget frame2 = (Widget)NULL;
  Widget label2 = (Widget)NULL;
  Widget rowcol4 = (Widget)NULL;
  Widget rowcol9 = (Widget)NULL;
  Widget toggle2 = (Widget)NULL;
  Widget separator7 = (Widget)NULL;
  Widget label7 = (Widget)NULL;
  Widget text1 = (Widget)NULL;
  Widget rowcol10 = (Widget)NULL;
  Widget toggle8 = (Widget)NULL;
  Widget separator8 = (Widget)NULL;
  Widget label11 = (Widget)NULL;
  Widget text5 = (Widget)NULL;
  Widget rowcol11 = (Widget)NULL;
  Widget toggle9 = (Widget)NULL;
  Widget separator9 = (Widget)NULL;
  Widget label12 = (Widget)NULL;
  Widget text6 = (Widget)NULL;
  Widget rowcol12 = (Widget)NULL;
  Widget toggle10 = (Widget)NULL;
  Widget separator10 = (Widget)NULL;
  Widget label13 = (Widget)NULL;
  Widget text7 = (Widget)NULL;
  Widget rowcol13 = (Widget)NULL;
  Widget toggle11 = (Widget)NULL;
  Widget separator11 = (Widget)NULL;
  Widget label14 = (Widget)NULL;
  Widget text8 = (Widget)NULL;
  Widget rowcol14 = (Widget)NULL;
  Widget toggle12 = (Widget)NULL;
  Widget separator12 = (Widget)NULL;
  Widget label15 = (Widget)NULL;
  Widget text9 = (Widget)NULL;
  Widget rowcol15 = (Widget)NULL;
  Widget toggle13 = (Widget)NULL;
  Widget separator13 = (Widget)NULL;
  Widget label16 = (Widget)NULL;
  Widget text10 = (Widget)NULL;
  Widget rowcol16 = (Widget)NULL;
  Widget toggle14 = (Widget)NULL;
  Widget separator14 = (Widget)NULL;
  Widget label17 = (Widget)NULL;
  Widget text11 = (Widget)NULL;
  Widget rowcol17 = (Widget)NULL;
  Widget toggle15 = (Widget)NULL;
  Widget separator15 = (Widget)NULL;
  Widget label18 = (Widget)NULL;
  Widget text12 = (Widget)NULL;
  Widget label3 = (Widget)NULL;

  Widget toggle100 = (Widget)NULL;
  Widget rowcol100 = (Widget)NULL;
  Widget separator100 = (Widget)NULL;
  Widget text100 = (Widget)NULL;
  Widget label100 = (Widget)NULL;

  Widget rowcol101 = (Widget)NULL;
  Widget separator101 = (Widget)NULL;
  Widget text101 = (Widget)NULL;
  Widget toggle101 = (Widget)NULL;
  Widget label101 = (Widget)NULL;

  Widget rowcol102 = (Widget)NULL;
  Widget separator102 = (Widget)NULL;
  Widget text102 = (Widget)NULL;
  Widget toggle102 = (Widget)NULL;
  Widget label102 = (Widget)NULL;

  if ( !widget_name )
    widget_name = "Colours";

  XtSetArg(al[ac], XmNautoUnmanage, FALSE); ac++;
  colors_form = XmCreateForm ( parent, widget_name, al, ac );
  ac = 0;
  _xd_rootwidget = colors_form;
  XtSetArg(al[ac], XmNautoUnmanage, FALSE); ac++;
  form_ = XmCreateForm ( colors_form, "form_", al, ac );
  ac = 0;
  frame2 = XmCreateFrame ( form_, "frame2", al, ac );
  XtSetArg(al[ac], XmNchildType, XmFRAME_TITLE_CHILD); ac++;
  label2 = XmCreateLabel ( frame2, "Colours", al, ac );

  ac = 0;
  rowcol4 = XmCreateRowColumn ( frame2, "rowcol4", al, ac );
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol9 = XmCreateRowColumn ( rowcol4, "rowcol9", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle2 = XmCreateToggleButtonGadget ( rowcol9, "@color_unknown", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator7 = XmCreateSeparator ( rowcol9, "separator7", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label7 = XmCreateLabel ( rowcol9, "Unknown", al, ac );
  ac = 0;
  text1 = XmCreateTextField ( rowcol9, "color_unknown", al, ac );
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol10 = XmCreateRowColumn ( rowcol4, "rowcol10", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle8 = XmCreateToggleButtonGadget ( rowcol10, "@color_suspended", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator8 = XmCreateSeparator ( rowcol10, "separator8", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label11 = XmCreateLabel ( rowcol10, "Suspended", al, ac );
  ac = 0;
  text5 = XmCreateTextField ( rowcol10, "color_suspended", al, ac );
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol11 = XmCreateRowColumn ( rowcol4, "rowcol11", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle9 = XmCreateToggleButtonGadget ( rowcol11, "@color_complete", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator9 = XmCreateSeparator ( rowcol11, "separator9", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label12 = XmCreateLabel ( rowcol11, "Complete", al, ac );
  ac = 0;
  text6 = XmCreateTextField ( rowcol11, "color_complete", al, ac );
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol12 = XmCreateRowColumn ( rowcol4, "rowcol12", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle10 = XmCreateToggleButtonGadget ( rowcol12, "@color_queued", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator10 = XmCreateSeparator ( rowcol12, "separator10", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label13 = XmCreateLabel ( rowcol12, "Queued", al, ac );
  ac = 0;
  text7 = XmCreateTextField ( rowcol12, "color_queued", al, ac );
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol13 = XmCreateRowColumn ( rowcol4, "rowcol13", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle11 = XmCreateToggleButtonGadget ( rowcol13, "@color_submitted", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator11 = XmCreateSeparator ( rowcol13, "separator11", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label14 = XmCreateLabel ( rowcol13, "Submitted", al, ac );
  ac = 0;
  text8 = XmCreateTextField ( rowcol13, "color_submitted", al, ac );
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol14 = XmCreateRowColumn ( rowcol4, "rowcol14", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle12 = XmCreateToggleButtonGadget ( rowcol14, "@color_active", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator12 = XmCreateSeparator ( rowcol14, "separator12", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label15 = XmCreateLabel ( rowcol14, "Active", al, ac );
  ac = 0;
  text9 = XmCreateTextField ( rowcol14, "color_active", al, ac );

  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol15 = XmCreateRowColumn ( rowcol4, "rowcol15", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle13 = XmCreateToggleButtonGadget ( rowcol15, "@color_aborted", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator13 = XmCreateSeparator ( rowcol15, "separator13", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label16 = XmCreateLabel ( rowcol15, "Aborted", al, ac );
  ac = 0;
  text10 = XmCreateTextField ( rowcol15, "color_aborted", al, ac );
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol16 = XmCreateRowColumn ( rowcol4, "rowcol16", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle14 = XmCreateToggleButtonGadget ( rowcol16, "@color_halted", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator14 = XmCreateSeparator ( rowcol16, "separator14", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label17 = XmCreateLabel ( rowcol16, "Halted", al, ac );
  ac = 0;
  text11 = XmCreateTextField ( rowcol16, "color_halted", al, ac );
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol17 = XmCreateRowColumn ( rowcol4, "rowcol17", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle15 = XmCreateToggleButtonGadget ( rowcol17, "@color_shutdown", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator15 = XmCreateSeparator ( rowcol17, "separator15", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label18 = XmCreateLabel ( rowcol17, "Shutdown", al, ac );
  ac = 0;
  text12 = XmCreateTextField ( rowcol17, "color_shutdown", al, ac );
  label3 = XmCreateLabelGadget ( form_, "warn", al, ac );

  {
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol100 = XmCreateRowColumn ( rowcol4, "rowcol100", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle100 = XmCreateToggleButtonGadget ( rowcol100, "@color_meter_low", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator100 = XmCreateSeparator ( rowcol100, "separator100", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label100 = XmCreateLabel ( rowcol100, "Meter", al, ac );
  ac = 0;
  text100 = XmCreateTextField ( rowcol100, "color_meter_low", al, ac );

  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol101 = XmCreateRowColumn ( rowcol4, "rowcol101", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle101 = XmCreateToggleButtonGadget ( rowcol101, "@color_threshold", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator101 = XmCreateSeparator ( rowcol101, "separator101", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label101 = XmCreateLabel ( rowcol101, "Threshold", al, ac );
  ac = 0;
  text101 = XmCreateTextField ( rowcol101, "color_threshold", al, ac );

  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
  rowcol102 = XmCreateRowColumn ( rowcol4, "rowcol102", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNindicatorType, XmONE_OF_MANY); ac++;
  XtSetArg(al[ac], XmNset, FALSE); ac++;
  toggle102 = XmCreateToggleButtonGadget ( rowcol102, "@color_event", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNorientation, XmVERTICAL); ac++;
  separator102 = XmCreateSeparator ( rowcol102, "separator102", al, ac );
  ac = 0;
  XtSetArg(al[ac], XmNwidth, 100); ac++;
  XtSetArg(al[ac], XmNalignment, XmALIGNMENT_END); ac++;
  XtSetArg(al[ac], XmNrecomputeSize, FALSE); ac++;
  label102 = XmCreateLabel ( rowcol102, "Event", al, ac );
  ac = 0;
  text102 = XmCreateTextField ( rowcol102, "color_event", al, ac );
  }

  ac=0;
  XtSetArg(al[ac], XmNtopAttachment, XmATTACH_FORM); ac++;
  XtSetArg(al[ac], XmNbottomAttachment, XmATTACH_FORM); ac++;
  XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
  XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
  XtSetValues ( form_,al, ac );
  ac = 0;

  XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
  XtSetArg(al[ac], XmNtopOffset, 5); ac++;
  XtSetArg(al[ac], XmNtopWidget, label3); ac++;
  XtSetArg(al[ac], XmNbottomAttachment, XmATTACH_NONE); ac++;
  XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
  XtSetArg(al[ac], XmNleftOffset, 5); ac++;
  XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
  XtSetArg(al[ac], XmNrightOffset, 5); ac++;
  XtSetValues ( frame2,al, ac );
  ac = 0;

  XtSetArg(al[ac], XmNtopAttachment, XmATTACH_FORM); ac++;
  XtSetArg(al[ac], XmNtopOffset, 5); ac++;
  XtSetArg(al[ac], XmNbottomAttachment, XmATTACH_NONE); ac++;
  XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
  XtSetArg(al[ac], XmNleftOffset, 5); ac++;
  XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
  XtSetArg(al[ac], XmNrightOffset, 5); ac++;
  XtSetValues ( label3,al, ac );
  ac = 0;

  XtAddCallback (toggle2, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text1, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle2;
  children[ac++] = separator7;
  children[ac++] = label7;
  children[ac++] = text1;
  XtManageChildren(children, ac);
  ac = 0;
  XtAddCallback (toggle8, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text5, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle8;
  children[ac++] = separator8;
  children[ac++] = label11;
  children[ac++] = text5;
  XtManageChildren(children, ac);
  ac = 0;
  XtAddCallback (toggle9, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text6, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle9;
  children[ac++] = separator9;
  children[ac++] = label12;
  children[ac++] = text6;
  XtManageChildren(children, ac);
  ac = 0;
  XtAddCallback (toggle10, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text7, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle10;
  children[ac++] = separator10;
  children[ac++] = label13;
  children[ac++] = text7;
  XtManageChildren(children, ac);
  ac = 0;
  XtAddCallback (toggle11, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text8, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle11;
  children[ac++] = separator11;
  children[ac++] = label14;
  children[ac++] = text8;
  XtManageChildren(children, ac);
  ac = 0;
  XtAddCallback (rowcol14, XmNtearOffMenuDeactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  XtAddCallback (toggle12, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text9, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle12;
  children[ac++] = separator12;
  children[ac++] = label15;
  children[ac++] = text9;
  XtManageChildren(children, ac);
  ac = 0;
  XtAddCallback (toggle13, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text10, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle13;
  children[ac++] = separator13;
  children[ac++] = label16;
  children[ac++] = text10;
  XtManageChildren(children, ac);
  ac = 0;
  XtAddCallback (toggle14, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text11, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle14;
  children[ac++] = separator14;
  children[ac++] = label17;
  children[ac++] = text11;
  XtManageChildren(children, ac);
  ac = 0;
  XtAddCallback (toggle15, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text12, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle15;
  children[ac++] = separator15;
  children[ac++] = label18;
  children[ac++] = text12;
  XtManageChildren(children, ac);

  {
  ac = 0;
  XtAddCallback (toggle100, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text100, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle100;
  children[ac++] = separator100;
  children[ac++] = label100;
  children[ac++] = text100;
  XtManageChildren(children, ac);

  ac = 0;
  XtAddCallback (toggle101, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text101, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle101;
  children[ac++] = separator101;
  children[ac++] = label101;
  children[ac++] = text101;
  XtManageChildren(children, ac);

  ac = 0;
  XtAddCallback (toggle102, XmNvalueChangedCallback,&colors_form_c:: useCB, (XtPointer) this);
  XtAddCallback (text102, XmNactivateCallback,&colors_form_c:: changedCB, (XtPointer) this);
  children[ac++] = toggle102;
  children[ac++] = separator102;
  children[ac++] = label102;
  children[ac++] = text102;
  XtManageChildren(children, ac);

  }

  ac = 0;
  children[ac++] = rowcol9;
  children[ac++] = rowcol10;
  children[ac++] = rowcol11;
  children[ac++] = rowcol12;
  children[ac++] = rowcol13;
  children[ac++] = rowcol14;
  children[ac++] = rowcol15;
  children[ac++] = rowcol16;
  children[ac++] = rowcol17;
  { children[ac++] = rowcol100;
  children[ac++] = rowcol101;
  children[ac++] = rowcol102; }
  XtManageChildren(children, ac);

  ac = 0;
  children[ac++] = label2;
  children[ac++] = rowcol4;
  XtManageChildren(children, ac);
  ac = 0;
  children[ac++] = frame2;
  children[ac++] = label3;
  XtManageChildren(children, ac);
  ac = 0;
  children[ac++] = form_;
  XtManageChildren(children, ac);
}

void colors_form_c::useCB( Widget widget, XtPointer client_data, XtPointer call_data )
{
  colors_form_p instance = (colors_form_p) client_data;
  instance->useCB ( widget, call_data );
}

void colors_form_c::changedCB( Widget widget, XtPointer client_data, XtPointer call_data )
{
  colors_form_p instance = (colors_form_p) client_data;
  instance->changedCB ( widget, call_data );
}

