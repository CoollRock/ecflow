#!/bin/ksh
#==========================================================================
##.TITLE   EMOS - METAPS utilities
##.NAME    smskill
##.SECTION EMOS
##.AUTHOR  Manuel Fuentes
##.DATE    2001-11-20
##.VERSION 1.0
##.FILE    ~emos/bin/smskill
##.ORIGIN  wssubmit
#==========================================================================
##$  smskill user host
##
##?  Decides according to host argument which kill method to use.

# Modifications:

#--------------------------------------------------------------------------
#  Check the number of arguments
#--------------------------------------------------------------------------
export SLURM_ROOT=/usr/local/apps/slurm/current/bin
RSH=rsh
type rsh || RSH=ssh

set -x

if [ $# -lt 3 ] ; then
  echo "usage: $0 <user> <host> <smsid> [ smsjob ]"
  echo "example: $0 emos leda 12345"
  echo "example: $0 emos leda 12345 smsjob"
  exit 1
fi

user=$1
host=$2
smsid=$3

subfile=${4}.sub

#--------------------------------------------------------------------------
# determine queuing system from hostname
# (can be replaced by a more refined method later...)
#--------------------------------------------------------------------------

hostname=$(hostname)

case $host in
  ha-pp | happ | ha_pp | celeborn | elrond | altariel | frodo | bilbo | belegorn | boromir | denethor | faramir | acq | acq2 | pp1 | pp2 | diss | pp3 | hallas )
    type=pbs
    ;;
  vpp* )    type=vppnqs      ;;
  icarus )    type=nqs      ;;
  ecgate1 | ecgb* )         type=slurm;;    
  ecgate  | ecga* | c2*)    type=ll;;
  lxa | lxb | lxab )    type=new_linux    ;;  
  swarm | linux_cluster )    type=swarm      ;;
  $hostname | localhost )
    type=local
    ;;
  * )
    type=rsh
    ;;
esac


case $type in
#==========================================================================
# Kill on hp using PBS
  pbs )
#==========================================================================

    if [[ -s $subfile ]] ; then
      tid=`tail -1 $subfile | cut -d\. -f1 `
      # tid=`tail -1 $subfile | cut -d\. -f1 `
      # where=`tail -1 $subfile | cut -d\. -f2 `
      # rsh $where -l $user qsig -s 2 $tid
      # rsh $where -l $user qdel -W 10 $tid      
      qsig -s 2 $tid
      qdel -W 10 $tid
      
    elif [[ -s $4 ]] ; then
      tid=`grep PBS_JOB ${4}.1 | cut -d= -f2`
      $RSH $host -l $user qsig -s 2 $tid
      $RSH $host -l $user qdel -W 10 $tid
      
    else
      # Signal the job
      $RSH $host -l $user qsig -s 2 $smsid

      # Remove the job from PBS (give 10 seconds delay for the above to finish)
      $RSH $host -l $user qdel -W 10 $smsid
    fi

  ;;
#==========================================================================
# Kill on vpp using NQS
  vppnqs )
#==========================================================================

    $RSH $host -l $user qdel -2 $smsid
  ;;
#==========================================================================
# Kill on workstations using NQS
  nqs )
#==========================================================================

        $RSH $host -l $user qdel -2 $smsid

  ;;
#==========================================================================
# Kill on linux cluster
#==========================================================================
  swarm )

    use sge
    if [[ -s $subfile ]] then
      tid=`grep " has been submitted" $subfile | cut -f 3 -d" "`
      sge_qdel $tid
      if [[ $? = 0 ]] && [[ -d $TMPDIR ]] ; then
        touch $TMPDIR/kill$$
        grep "^SMSNODE="  ${subfile%.sub}   > $TMPDIR/kill$$ && \
        grep "^SMS_PROG=" ${subfile%.sub}  >> $TMPDIR/kill$$ && \
        grep "^SMSNAME="  ${subfile%.sub}  >> $TMPDIR/kill$$ && \
        grep "^SMSPASS="  ${subfile%.sub}  >> $TMPDIR/kill$$ && \
        echo "export SMSNODE SMS_PROG SMSNAME SMSPASS " >> $TMPDIR/kill$$ && \
        echo "smsabort " >> $TMPDIR/kill$$ && . $TMPDIR/kill$$
        rm -f $TMPDIR/kill$$
      fi

    elif [[ -s $4 ]] ; then
      tid=`grep active_jobs $4 | grep cd | cut -d"." -f 2 | cut -d"/" -f8`
      sge_qdel $tid
    else
      sge_qdel $smsid
    fi

  ;;
  new_linux )

  tid=`grep " has been submitted" $subfile | cut -f 3 -d" "`
  ssh $host /usr/local/apps/sge/sge6_2u5/bin/lx24-amd64/qdel $tid

  ;;

#==========================================================================
# Kill on workstations using load leveler
  ll )
#==========================================================================

 if [[ -s $subfile ]] then
   tid=`grep " has been submitted." $subfile | cut -d\" -f2`
   $RSH $host -l $user /usr/lpp/LoadL/full/bin/llcancel $tid

   if [[ $? = 0 ]] && [[ -d $TMPDIR ]] ; then
    touch $TMPDIR/kill$$
    grep "^SMSNODE="  ${subfile%.sub}   > $TMPDIR/kill$$ && \
    grep "^SMS_PROG=" ${subfile%.sub}  >> $TMPDIR/kill$$ && \
    grep "^SMSNAME="  ${subfile%.sub}  >> $TMPDIR/kill$$ && \
    grep "^SMSPASS="  ${subfile%.sub}  >> $TMPDIR/kill$$ && \
    echo "export SMSNODE SMS_PROG SMSNAME SMSPASS " >> $TMPDIR/kill$$ && \
    echo "smsabort " >> $TMPDIR/kill$$ && . $TMPDIR/kill$$
    rm -f $TMPDIR/kill$$
   fi

 else

   if [[ "$host" = hpc* ]] ; then
     host=`echo $host | cut -c1-4`
     id=${host}0`echo $smsid % 1000 | bc`.` echo $smsid / 1000 | bc`
   else
     id=$smsid
     if [[ -f $smsid ]] ; then
       grep "LOADL_STEP_ID=NOT_SET" $subfile && id=`grep JOB_ID= $subfile | cut -d= -f2` && $RSH $host -l user kill -9 $id
     fi
   fi

   $RSH $host -l $user /usr/lpp/LoadL/full/bin/llcancel $id
 fi

  ;;

  slurm )
#==========================================================================

 if [[ -s $subfile ]] then
   tid=`grep "Submitted batch job " $subfile | awk '{print $4}'`
   ssh $host -l $user $SLURM_ROOT/scancel $tid

   if [[ $? = 0 ]] && [[ -d $TMPDIR ]] ; then
    touch $TMPDIR/kill$$
    grep "^SMSNODE="  ${subfile%.sub}   > $TMPDIR/kill$$ && \
    grep "^SMS_PROG=" ${subfile%.sub}  >> $TMPDIR/kill$$ && \
    grep "^SMSNAME="  ${subfile%.sub}  >> $TMPDIR/kill$$ && \
    grep "^SMSPASS="  ${subfile%.sub}  >> $TMPDIR/kill$$ && \
    echo "export SMSNODE SMS_PROG SMSNAME SMSPASS " >> $TMPDIR/kill$$ && \
    echo "smsabort " >> $TMPDIR/kill$$ && . $TMPDIR/kill$$
    rm -f $TMPDIR/kill$$
   fi

 else

     id=$smsid
     if [[ -f $smsid ]] ; then
       grep "LOADL_STEP_ID=NOT_SET" $subfile && id=`grep JOB_ID= $subfile | cut -d= -f2` && $RSH $host -l user kill -9 $id
     fi

   ssh $host -l $user $SLURM_ROOT/scancel $id
 fi

  ;;
#==========================================================================
# Kill on any other workstation using rsh standalone
  rsh )
#==========================================================================

# Testing linux platforms
if [[ $host = "selene" ]]
then
    # This doesn't work. COME BACK HERE
    $RSH $host -l $user /bin/kill -s 2 $smsid
else
    # SGI syntax: kill -signal -pgid
    $RSH $host -l $user kill -15 $smsid
fi

  ;;
#==========================================================================
# Kill on local workstation using standalone
  local )
#==========================================================================

    kill -15 $smsid
    ;;

esac
#-------------
#  Sleep a bit
#-------------

sleep 2
  
exit 0

